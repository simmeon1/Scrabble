@model Scrabble.Models.Game
@{
    ViewData["Title"] = "Scrabble";
}

<head>
    <link rel="stylesheet" href="~/css/index.css">
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/functions.js"></script>
</head>

<style>

    .grid-item {
        width: @(Model.Board.IntToCSSWidth(Model.Board.Columns))%;
</style>

<div id="game">
    <div id="player">
        <div id="rack"><h1>@(Model.CurrentPlayer.Rack.ToString())</h1></div>
        <div>
            <p id="startingWordPosition">None</p>
            <input id="wordInput" type="text">
        </div>
        <div id="inputErrors"></div>
    </div>
    <div id="board">
        @for (int i = 0; i < Model.Board.Rows; i++)
        {
            <div id="row-@(i+1)">
                @for (int j = 0; j < Model.Board.Columns; j++)
                {
                    <div id="tile-@(((i+1)*Model.Board.Columns)+j)" class="grid-item">&nbsp;&nbsp;</div>
                }
            </div>
        }
    </div>
</div>
@*<h2>@Html.DisplayFor(model => model.Pouch.PouchTiles)</h2>
    <h2>
        @foreach (Player p in Model.PlayerData)
        {
            <h1>@p.Rack.ToString()</h1>
        }
    </h2>*@
